name: Deploy DAB

on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'dev' && 'stg' || 'dev' }}
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
      DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
      RAW_ENV: ${{ vars.ENV }}
      GIT_BRANCH: ${{ github.ref_name }}

    steps:
      - name: Set ENV from branch if not defined
        id: set-env
        run: |
          echo "ENV=${RAW_ENV:-$([[ $GIT_BRANCH == 'dev' ]] && echo 'stg' || echo 'dev')}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: Create ~/.databrickscfg
        run: |
          rm -f ~/.databrickscfg
          echo "[DEFAULT]" > ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "auth_type = client" >> ~/.databrickscfg
          echo "client_id = $DATABRICKS_CLIENT_ID" >> ~/.databrickscfg
          echo "client_secret = $DATABRICKS_CLIENT_SECRET" >> ~/.databrickscfg

      - name: Validate bundle
        run: |
          databricks bundle validate -t $ENV

      - name: Deploy bundle
        run: |
          databricks bundle deploy -t $ENV
